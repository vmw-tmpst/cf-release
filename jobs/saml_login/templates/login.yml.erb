---
name: saml_login

logging:
  config: /var/vcap/jobs/saml_login/config/log4j.properties

<% protocol = p("saml_login.protocol") %>
<% uaa_base = if_p("saml_login.uaa_base") { |x| x }.else { "#{protocol}://uaa.#{properties.domain}" } %>
uaa:
  url: <%= uaa_base %>
  token:
    url: <%= uaa_base %>/oauth/token
  login:
    url: <%= uaa_base %>/authenticate
  clientinfo:
    url: <%= uaa_base %>/clientinfo
  approvals:
    url: <%= uaa_base %>/approvals

<% if_p("saml_login.links") do |links| %>
links: <% links.marshal_dump.each do |id,url| %>
  <%= id %>: <%= url %><% end %>
<% end %>

# The secret that this login server will use to authenticate to the uaa
LOGIN_SECRET: <%= if_p("uaa.login.client_secret") { |x| x }.else { p("uaa.clients.login.secret") } %>
<% if_p("uaa.require_https") do |req| %>
require_https: <%= req %>
<% end %>
<% if_p("uaa.dump_requests") do |dump| %>
dump_requests: <%= dump %>
<% end %>

login:
  url: <%= uaa_base %>
  # The entity base url is the location of this application
  # (The host and port of the application that will accept assertions)
  entityBaseURL: <%= "#{protocol}://login.#{properties.domain}" %>
  # The entityID of this SP
  entityID: <%= if_p("saml_login.entityid") { |x| x }.else { "login.#{properties.domain}" } %>

  # The location and credentials of the certificate for this SP
  serviceProviderKey: <%= p("saml_login.serviceProviderKey") %>
  serviceProviderCertificate: <%= p("saml_login.serviceProviderCertificate") %>

  # The entity alias of the IDP
  idpEntityAlias: <%= p("saml_login.idp_entity_alias") %>
  <% if_p("saml_login.idp_metadata_file") do |file|  %>
  idpMetadataFile: /var/vcap/jobs/saml_login/<%= file %>
  <% end %>
  <% if_p("saml_login.idp_metadata_url") do |url| %>
  idpMetadataURL: <%= url %>
  <% end %>

  authorize:
    url: <%= uaa_base %>/login/oauth/authorize

  saml:
    assertionConsumerIndex: <%= p("saml_login.assertion_consumer_index") %>
    nameID: <%= p("saml_login.nameid_format") %>
